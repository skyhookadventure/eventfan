name: CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Unit/integration tests & linting
    timeout-minutes: 3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Enable Corepack
        run: corepack enable
      - uses: actions/cache@v4
        with:
          path: ${{ env.working-directory }}/node_modules
          key: ${{ env.working-directory }}-${{ hashFiles(format('{0}/yarn.lock', env.working-directory)) }}
          restore-keys: ${{ env.working-directory }}
      - name: Install
        run: yarn install
      - name: Test
        run: yarn test
      - name: Lint
        run: yarn lint

  endToEnd:
    name: Browser end-to-end tests
    timeout-minutes: 3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Enable Corepack
        run: corepack enable
      - uses: actions/cache@v4
        with:
          path: ${{ env.working-directory }}/node_modules
          key: ${{ env.working-directory }}-${{ hashFiles(format('{0}/yarn.lock', env.working-directory)) }}
          restore-keys: ${{ env.working-directory }}
      - name: Install
        run: yarn install
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Background Server
        uses: BerniWittmann/background-server-action@v1.0.1
        with:
          command: yarn playwright
          start: yarn dev

  release:
    if: github.event_name == 'push' # Push/merge only, not on PR
    name: Release
    needs:
      - test
      - endToEnd
    timeout-minutes: 3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Enable Corepack
        run: corepack enable
      - uses: actions/cache@v4
        with:
          path: ${{ env.working-directory }}/node_modules
          key: ${{ env.working-directory }}-${{ hashFiles(format('{0}/yarn.lock', env.working-directory)) }}
          restore-keys: ${{ env.working-directory }}
      - name: Install
        run: yarn install
      - name: Build
        run: yarn build
      - name: Bump node version
        run: yarn bump
      - name: Make packages folder
        run: mkdir packages
      # Zip up everything for the node package
      # Note this should be moved to npmjs in the future
      - name: Zip Node
        run: >
          tar -czvf ./packages/node.tgz \
            --exclude .eslintrc.js \
            --exclude .git \
            --exclude .github \
            --exclude .gitignore \
            --exclude coverage \
            --exclude dist/browser \
            --exclude dist/legacy \
            --exclude dist/main/e2e \
            --exclude dist/module/e2e \
            --exclude node_modules \
            --exclude packages \
            --exclude src \
            --exclude yarn.lock \
            ./
      - name: Update Github release
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          automatic_release_tag: 'latest'
          prerelease: true
          title: 'Latest'
          files: |
            packages/*
      - name: Publish to NPMJS
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: package.json
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4.1.3
        with:
          commit_message: Bump version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
